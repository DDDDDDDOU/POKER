{"remainingRequest":"/Users/user/Desktop/web2.0/WeIns_F/node_modules/babel-loader/lib/index.js!/Users/user/Desktop/web2.0/WeIns_F/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/user/Desktop/web2.0/WeIns_F/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/Desktop/web2.0/WeIns_F/src/components/release_blog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/user/Desktop/web2.0/WeIns_F/src/components/release_blog.vue","mtime":1599311042747},{"path":"/Users/user/Desktop/web2.0/WeIns_F/node_modules/cache-loader/dist/cjs.js","mtime":1594082385499},{"path":"/Users/user/Desktop/web2.0/WeIns_F/node_modules/babel-loader/lib/index.js","mtime":1594082385506},{"path":"/Users/user/Desktop/web2.0/WeIns_F/node_modules/cache-loader/dist/cjs.js","mtime":1594082385499},{"path":"/Users/user/Desktop/web2.0/WeIns_F/node_modules/vue-loader/lib/index.js","mtime":1594082401315}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["release_blog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"extern\">\n        <el-card class=\"release\" shadow=\"hover\">\n            <div class=\"header\">\n                <div class=\"motto\">\n                    <img src=\"../assets/image/motto.png\" alt=\"motto\" style=\"height: 100%\"/>\n                </div>\n                <div class=\"counter\">\n                    <span>已输入{{counter()}}字</span>\n                </div>\n            </div>\n            <div class=\"input-area\">\n                <div class=\"input\">\n                    <el-input type=\"textarea\" v-model=\"text\"></el-input>\n                </div>\n            </div>\n            <div class=\"foot\">\n                <div class=\"addition\">\n                    <el-row type=\"flex\" class=\"row-bg\" justify=\"space-around\">\n                        <el-col :span=\"4\">\n                            <el-button type=\"text\" icon=\"el-icon-magic-stick\" @click=\"emoji\">表情</el-button>\n                        </el-col>\n                        <el-col :span=\"4\">\n                            <el-upload\n                                    action=''\n                                    style=\"width: 80%;z-index: 998\"\n                                    class=\"avatar-uploader\"\n                                    :on-remove=\"removeFile\"\n                                    :on-change=\"getFile1\"\n                                    :on-success=\"uploadSuccess\"\n                                    list-type=\"picture\"\n                                    :auto-upload=\"false\"\n                                    :show-file-list=\"false\"\n                                    accept=\".jpg,.jpeg,.png\">\n                                <el-button type=\"text\" icon=\"el-icon-picture-outline-round\" @click=\"changeMode\">图片\n                                </el-button>\n                            </el-upload>\n\n                        </el-col>\n                        <el-col :span=\"4\">\n                            <el-upload\n                                    class=\"avatar-uploader el-upload--text\"\n                                    action='' :show-file-list=\"false\"\n                                    :on-success=\"uploadSuccess\"\n                                    :on-remove=\"removeFile\"\n                                    :on-change=\"getFile2\"\n                                    :auto-upload=\"false\"\n                                    accept=\".mp4\">\n                                <el-button type=\"text\" icon=\"el-icon-video-camera\" @click=\"changeMode\">视频</el-button>\n                            </el-upload>\n                        </el-col>\n                        <el-col :span=\"4\">\n                            <el-button type=\"text\" icon=\"el-icon-guide\" @click=\"topic\">话题</el-button>\n                        </el-col>\n                    </el-row>\n                </div>\n\n                <div class=\"issue\">\n                    <el-row class=\"btn\">\n                        <el-button type=\"primary\" size=\"mini\" @click=\"release\" id=\"release_button\">发布</el-button>\n                    </el-row>\n                    <div class=\"issue-state\">\n                        <el-dropdown size=\"mini\" trigger=\"click\" id=\"dropdown_release\">\n                        <span class=\"el-dropdown-link\">\n                        可见：{{state}}<i class=\"el-icon-arrow-down el-icon--right\"></i>\n                        </span>\n                            <el-dropdown-menu slot=\"dropdown\" style=\"width: 80px\" id=\"dropdown_menu_release\">\n                                <p v-on:click=\"handleCommand(0)\">\n                                    <el-dropdown-item id=\"dropdown_menu_release1\">公开</el-dropdown-item>\n                                </p>\n                                <p v-on:click=\"handleCommand(1)\">\n                                    <el-dropdown-item id=\"dropdown_menu_release2\">粉丝</el-dropdown-item>\n                                </p>\n                                <p v-on:click=\"handleCommand(2)\">\n                                    <el-dropdown-item id=\"dropdown_menu_release3\">仅自己</el-dropdown-item>\n                                </p>\n                            </el-dropdown-menu>\n                        </el-dropdown>\n                    </div>\n                </div>\n\n            </div>\n            <div>\n                <el-row v-for=\"(item,i) in fileList\"\n                        v-bind:key=\"i\"\n                        type=\"flex\"\n                        class=\"row-bg\"\n                        justify=\"space-around\">\n                    <el-col :span=\"3\">\n                        <span style=\"color: #8B8B8B;font-family: 'DejaVu Sans', Arial, Helvetica, sans-serif ;float: left;font-size: medium;margin-left: 20px;width: 1%;height: 30px;text-align: left;line-height: 30px\">\n                            {{ i + 1 }}\n                        </span>\n                    </el-col>\n                    <el-col>\n                        <span style=\"color: #8B8B8B;font-family: 'DejaVu Sans', Arial, Helvetica, sans-serif ;float: left;font-size: medium;margin-left: 20px;width: 100%;height: 30px;text-align: left;line-height: 30px\">\n                            {{ item['filename'] }}\n                        </span>\n                    </el-col>\n                    <el-col>\n                        <el-button  @click=\"removeFile(i)\" type=\"text\" size=\"mini\" icon=\"el-icon-close\">删除</el-button>\n                    </el-col>\n                </el-row>\n            </div>\n\n            <div v-if=\"topic_flag\">\n                <el-card shadow=\"hover\">\n                    <el-row style=\"margin-top: 10px;margin-bottom: 5px\">\n                        <el-tag\n                                style=\"margin-left: 3px;margin-right: 3px\"\n                                :key=\"tag.id\"\n                                v-for=\"(tag, i) in chosen_tags\"\n                                closable\n                                :disable-transitions=\"false\"\n                                @close=\"handleClose(i)\">\n                            #{{ tag.content }}#\n                        </el-tag>\n                    </el-row>\n                    <el-row style=\"margin-top: 10px;margin-bottom: 5px\">\n                        <el-autocomplete\n                                popper-class=\"my-autocomplete\"\n                                v-model=\"tagInput\"\n                                :fetch-suggestions=\"querySearchAsync\"\n                                placeholder=\"请输入标签搜索\"\n                                @select=\"handleSelect\"\n                                style=\"width: 60%\"\n                                @keyup.native.enter=\"querySearchAsync\">\n                            <template slot-scope=\"{ item }\">\n                                <div class=\"topic\">#{{ item.content }}#</div>\n                            </template>\n                        </el-autocomplete>\n                        <el-button type=\"primary\" style=\"width: 15%;font-size: 10px;margin-left: 5px\" v-on:click=\"querySearchAsync\">搜索</el-button>\n                        <el-button type=\"primary\" style=\"width: 15%; font-size: 10px\" @click=\"newTag = !newTag\">{{newTagBtn()}}</el-button>\n                    </el-row>\n                    <el-row v-if=\"newTag === true\">\n                        <el-input v-model=\"newTagInput\" placeholder=\"请输入新的标签\" style=\"width: 60%\"></el-input>\n                        <el-button type=\"success\" style=\"width: 15%; font-size: 10px;margin-left: 5px\" @click=\"createTag\">提交</el-button>\n                        <span class=\"tagCounter\" style=\"width: 20%; margin-left: 15px\">还可以输入{{ newTagCounter() }}字</span>\n                    </el-row>\n                </el-card>\n            </div>\n\n            <el-row class=\"emoji-picker\" style=\"z-index: 999\">\n                <VEmojiPicker\n                    v-show=\"showEmojiPicker\"\n                    labelSearch=\"Search\"\n                    lang=\"pt-BR\"\n                    @select=\"onSelectEmoji\"\n                />\n            </el-row>\n\n        </el-card>\n\n    </div>\n</template>\n\n<script>\n    import axios from 'axios';\n    import VEmojiPicker from 'v-emoji-picker';\n\n    export default {\n        components: {\n            VEmojiPicker\n        },\n        data() {\n            return {\n                text: '',\n                state: '公开',\n                uploaded: false,\n                fileList: [],\n                uploadMode: false,\n                lock: 0,\n                dialogVisible: false,\n                showEmojiPicker: false,\n\n                Tags: [],\n                chosen_tags: [],\n                tagInput: '',\n                newTag: false,\n                newTagInput: '',\n                topic_flag: false,\n                message: 'error message',\n                mock:0\n            }\n        },\n        created() {\n            this.loadTags();\n        },\n        methods: {\n            fresh() {\n               this.text = '';\n               this.state = '公开';\n               this.uploaded = false;\n               this.fileList = [];\n               this.uploadMode = false;\n               this.lock = 0;\n               this.dialogVisible = false;\n               this.Tags = [];\n               this.newTag = false;\n               this.newTagInput = '';\n               this.chosen_tags = [];\n               this.tagInput = '';\n               this.message = '';\n               return true;\n            },\n            counter() {\n                return this.text.length;\n            },\n            typify() {\n                if (this.state === '公开')\n                    return 3;\n                else if (this.state === '粉丝')\n                    return 1;\n                else\n                    return 0;\n            },\n            curr_time() {\n                let date = new Date();\n                let res = date.getFullYear() + '-';\n                res+=parseInt((date.getMonth()+1)/10)\n                res += (date.getMonth()+1)%10;\n                res +='-';\n\n\n                res+=parseInt(date.getDate()/10);\n                res += date.getDate()%10;\n                res += ' ';\n\n\n                res +=parseInt(date.getHours()/10);\n                res +=date.getHours()%10;\n                res +=':';\n\n                res +=parseInt(date.getMinutes()/10);\n                res +=date.getMinutes()%10;\n\n                return res;\n            },\n            release() {\n                this.showEmojiPicker = false;\n                if (this.$root.logged === false) {\n                    this.$message.info('请登录后再进行操作！');\n                    return false;\n                }\n\n                if (this.text === '' && this.fileList.length === 0) {\n                    this.$message.error('不能发布空动态！');\n                    return false;\n                }\n\n                let url = 'http://localhost:8088/blog/setBlog';\n                // axios.post(url, {\n                //     uid: sessionStorage.getItem(\"id\"),\n                //     content: this.text,\n                //     type: this.typify(),\n                //     post_day: this.curr_time(),\n                //     video: null,\n                //     imag: JSON.stringify(this.fileList),\n                //     label: JSON.stringify(this.chosen_tags),\n                //     username: sessionStorage.getItem(\"name\"),\n                //     useravatar: JSON.parse(sessionStorage.getItem(\"userMongo\")).avatar\n                // },\n                //     {\n                //         headers: {\n                //             token: sessionStorage.getItem(\"token\")\n                //         }\n                //     }).then(() =>{\n                //     this.$message.success(\"动态发布成功！\");\n                //     this.fresh();\n                //     this.$emit('change')\n                // }).catch(err=> {\n                //     console.log(err);\n                // });\n                return this.axios.post(url).then(res=>{\n                    this.isSubmit=true;\n                    return res === 'success';\n                });\n            },\n            emoji() {\n                this.showEmojiPicker = (this.showEmojiPicker !== true);\n                return this.showEmojiPicker;\n            },\n            onSelectEmoji(emoji) {\n                console.log(emoji);\n                this.text += emoji.data;\n                return this.text;\n            },\n            uploadSuccess() {\n                this.$message.success('上传成功')\n                this.message='上传成功';\n                return true;\n            },\n            topic() {\n                this.topic_flag = (this.topic_flag !== true);\n                this.message='topic!';\n                return true;\n            },\n            handleCommand(command) {\n                if (command === 0) {\n                    this.state = \"公开\";\n                    return 0;\n                }\n                if (command === 1) {\n                    this.state = \"粉丝\";\n                    return 1;\n                }\n                if (command === 2) {\n                    this.state = \"仅自己\";\n                    return 2;\n                }\n                return -1;\n            },\n            changeMode() {\n                this.uploadMode = !this.uploadMode\n                return true;\n            },\n            getBase64(file) {\n                return new Promise(function (resolve, reject) {\n                    let reader = new FileReader();\n                    let imgResult = \"\";\n                    reader.readAsDataURL(file);\n                    reader.onload = function () {\n                        imgResult = reader.result;\n                    };\n                    reader.onerror = function (error) {\n                        reject(error);\n                    };\n                    reader.onloadend = function () {\n                        resolve(imgResult);\n                    };\n                });\n            },\n            getFile(file) {\n                if (!this.uploaded)\n                    this.uploaded = true;\n                this.getBase64(file.raw).then(res => {\n                    this.fileList.push({\n                        filename: file.name,\n                        base64: res,\n                    });\n                });\n                return true;\n            },\n            getFile1(file) {\n                console.log(\"file:\")\n                console.log(file);\n                if (this.lock === 2) {\n                    this.$message.warning(\"图片和视频无法同时上传！\");\n                    this.message=\"图片和视频无法同时上传！\";\n                    return false;\n                } else {\n                    if (this.fileList.length >= 6) {\n                        this.$message.warning(\"做多上传6张图片！\");\n                        return false;\n                    }\n                    this.lock = 1;\n                    this.getFile(file);\n                    return true;\n                }\n            },\n            getFile2(file) {\n                if (this.lock === 1) this.$message.warning(\"图片和视频无法同时上传！\");\n                else {\n                    if (this.fileList.length >= 1) {\n                        this.$message.warning(\"视频太多了，老板做不出来！\");\n                        return false;\n                    }\n                    this.lock = 2;\n                    this.getFile(file);\n                    return true;\n                }\n                return false;\n            },\n            removeFile(i) {\n                this.fileList.splice(i, 1);\n                if (this.fileList.length === 0) {\n\n                    this.uploaded = false;\n                    this.lock = 0;\n                }\n                console.log(this.lock);\n                return true;\n            },\n            handleClose(i){\n                this.chosen_tags.splice(i,1);\n                return true;\n            },\n            loadTags() {\n                let url = 'http://localhost:8088/blog/getLabels';\n                // axios.get(url).then(res => {\n                //     let tags = res.data;\n                //     for (let i = 0; i < tags.length; ++i) {\n                //         let tag = {\n                //             id: tags[i].id,\n                //             content: tags[i].content\n                //         };\n                //         this.Tags.push(tag);\n                //     }\n                // }).catch(err => {\n                //     console.log(err);\n                // });\n                return this.axios.post(url).then(res=>{\n                    this.Tags.push('123')\n                    return res === 'success';\n                });\n            },\n            addTag(tag) {\n                switch (this.chosen_tags.length) {\n                    case 2:\n                        this.$message.error('最多只能添加 2 个标签噢！');\n                        return false;\n                    case 1:\n                        if (this.chosen_tags[0].id === tag.id) {\n                            this.$message.error('不能添加重复标签噢！');\n                            return false;\n                        }\n                        else {\n                            this.chosen_tags.push(tag);\n                            return true;\n                        }\n                    case 0:\n                        this.chosen_tags.push(tag);\n                        return true;\n                    default:\n                        return false;\n                }\n            },\n            querySearchLabel() {\n                let items = [];\n                let url = 'http://localhost:8088/blog/findFuzzyLabels?lab=' + this.tagInput;\n                // axios.get(url).then(res => {\n                //     let labels = res.data;\n                //     for (let i = 0; i < labels.length; ++i) {\n                //         let label = {\n                //             content: labels[i].content,\n                //             id: labels[i].id\n                //         };\n                //         items.push(label);\n                //     }\n                // }).catch(err => {\n                //     console.log(err);\n                // });\n                this.axios.post(url).then(res=>{\n\n                    return res === 'success';\n                });\n\n                return items;\n            },\n            querySearchAsync(queryStr, cbe) {\n                let results = queryStr ? this.querySearchLabel() : this.Tags;\n                clearTimeout(this.timeout);\n                this.timeout = setTimeout(() => { cbe(results); }, 1000 * Math.random());\n                return results;\n            },\n            handleSelect(tag) {\n                this.addTag(tag);\n                return tag;\n            },\n            newTagBtn() {\n                return this.newTag ? '取消' : '新建';\n            },\n            newTagCounter() {\n                if (20 - this.newTagInput.length <= 0) {\n                    this.$message.info('新标签的长度不能超过 20 个字符！');\n                    this.newTagInput = this.newTagInput.substr(0, 20);\n                }\n\n                return 20 - this.newTagInput.length;\n            },\n            createTag() {\n                if(this.mock==1){\n                    this.$root.logged =true;\n                }\n                if(this.mock==-1){\n                    this.$root.logged =false;\n                }\n                if (this.$root.logged === false) {\n                    this.$message.info('请登录后再进行操作！');\n                    return false;\n                }\n\n                if (this.newTagInput === '' || this.newTagInput.length > 20) {\n                    this.$message.info('新标签内容不能为空！');\n                    return false;\n                }\n\n                let url = 'http://localhost:8088/blog/setLabel?label=' + this.newTagInput.replace(/\\s*/g, \"\");\n\n                // axios.get(url, {\n                //     headers: {\n                //         token: sessionStorage.getItem(\"token\")\n                //     }\n                // }).then(() => {\n                //     this.$message.success(\"创建话题 #\" + this.newTagInput + \"# 成功！\");\n                //     this.newTag = false;\n                //     this.newTagInput = '';\n                // }).catch(err=> {\n                //     console.log(err);\n                // });\n                return this.axios.post(url).then(res=>{\n                    return res === 'success';\n                });\n            }\n        }\n    }\n</script>\n\n\n<style scoped>\n    .extern {\n        width: 100%;\n    }\n\n    .release {\n        flex-direction: column;\n        width: 100%;\n    }\n\n    .header {\n        height: 20px;\n    }\n\n    .motto {\n        float: left;\n        height: 30px;\n    }\n\n    .counter {\n        float: right;\n        font-size: 12px;\n        margin-top: 6px;\n        color: #909399;\n    }\n\n    .tagCounter {\n        font-size: 12px;\n        color: #909399;\n    }\n\n    .foot {\n        background-color: white;\n        height: 40px;\n        padding-bottom: -5px;\n    }\n\n    .addition {\n        width: 65%;\n        float: left;\n        background-color: white;\n    }\n\n    .issue {\n        width: 35%;\n        float: left;\n        background-color: white;\n    }\n\n    .issue-state {\n        float: right;\n        margin-right: 10%;\n        margin-top: 10px;\n    }\n\n    .btn {\n        margin-top: 6px;\n        float: right;\n        margin-right: 5%;\n    }\n\n    .topic {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        color: #EE731B;\n    }\n</style>\n"],"sourceRoot":"src/components"}]}