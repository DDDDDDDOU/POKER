{"remainingRequest":"/Users/user/Desktop/web2.0/WeIns_F/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/Desktop/web2.0/WeIns_F/src/components/comments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/user/Desktop/web2.0/WeIns_F/src/components/comments.vue","mtime":1598592890398},{"path":"/Users/user/Desktop/web2.0/WeIns_F/node_modules/cache-loader/dist/cjs.js","mtime":1594082385499},{"path":"/Users/user/Desktop/web2.0/WeIns_F/node_modules/babel-loader/lib/index.js","mtime":1594082385506},{"path":"/Users/user/Desktop/web2.0/WeIns_F/node_modules/cache-loader/dist/cjs.js","mtime":1594082385499},{"path":"/Users/user/Desktop/web2.0/WeIns_F/node_modules/vue-loader/lib/index.js","mtime":1594082401315}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBjb21tZW50IGZyb20gIi4vY29tbWVudCI7CmltcG9ydCByZWxlYXNlX2NvbW1lbnQgZnJvbSAiLi9yZWxlYXNlX2NvbW1lbnQiOwpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiY29tbWVudHMiLAogICAgY29tcG9uZW50czogewogICAgICAgIGNvbW1lbnQsIHJlbGVhc2VfY29tbWVudAogICAgfSwKICAgIHByb3BzOiB7CiAgICAgICAgYmlkOiBOdW1iZXIsCiAgICAgICAgdWlkOiBOdW1iZXIsCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBjb21tZW50czogW10sCiAgICAgICAgICAgIGxpc3Q6IFtdCiAgICAgICAgfQogICAgfSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgdGhpcy5saXN0ID0gSlNPTi5wYXJzZShzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJjb21tZW50cyIpKTsKICAgICAgICB0aGlzLnBhcnNlUmVwbHlSZWxhdGlvbigpOwogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBjaGFuZ2UoKSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2ZyZXNoJyk7CiAgICAgICAgfSwKICAgICAgICBwYXJzZVJlcGx5UmVsYXRpb24oKSB7CiAgICAgICAgICAgIGxldCB0bXAgPSB0aGlzLmxpc3Q7CiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdG1wLmxlbmd0aDsgKytpKSB7CiAgICAgICAgICAgICAgICBpZiAodG1wW2ldLnRvX2NpZCA9PT0gLTEpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbW1lbnRzLnB1c2godG1wW2ldKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICB9Cn0K"},{"version":3,"sources":["comments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"comments.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <release_comment :bid=\"bid\" :to_uid=\"uid\" @change=\"change\"></release_comment>\n        <div v-if=\"list.length > 0\">\n            <ul>\n                <li v-for=\"comment in comments\" :key=\"comment.cid\">\n                    <comment :data=\"comment\" @change=\"change\"></comment>\n                </li>\n            </ul>\n        </div>\n        <div v-else style=\"width: 100%; background-color: #f2f2f5; text-align: center; height: 40px; font-size: 20px; color: darkgray; border-radius: 4px\">\n            <p style=\"margin-top: 10px\">暂无评论...</p>\n        </div>\n    </div>\n</template>\n\n<script>\n    import comment from \"./comment\";\n    import release_comment from \"./release_comment\";\n    export default {\n        name: \"comments\",\n        components: {\n            comment, release_comment\n        },\n        props: {\n            bid: Number,\n            uid: Number,\n        },\n        data() {\n            return {\n                comments: [],\n                list: []\n            }\n        },\n        created() {\n            this.list = JSON.parse(sessionStorage.getItem(\"comments\"));\n            this.parseReplyRelation();\n        },\n        methods: {\n            change() {\n                this.$emit('fresh');\n            },\n            parseReplyRelation() {\n                let tmp = this.list;\n                for (let i = 0; i < tmp.length; ++i) {\n                    if (tmp[i].to_cid === -1) {\n                        this.comments.push(tmp[i]);\n                    }\n                }\n            },\n        }\n    }\n</script>\n"]}]}