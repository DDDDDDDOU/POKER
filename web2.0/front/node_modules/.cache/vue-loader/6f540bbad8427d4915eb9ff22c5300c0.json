{"remainingRequest":"/Users/user/Desktop/web2.0/WeIns_F/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/Desktop/web2.0/WeIns_F/src/components/release.vue?vue&type=template&id=3f2b56a7&scoped=true&","dependencies":[{"path":"/Users/user/Desktop/web2.0/WeIns_F/src/components/release.vue","mtime":1594611264311},{"path":"/Users/user/Desktop/web2.0/WeIns_F/node_modules/cache-loader/dist/cjs.js","mtime":1594082385499},{"path":"/Users/user/Desktop/web2.0/WeIns_F/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1594082401315},{"path":"/Users/user/Desktop/web2.0/WeIns_F/node_modules/cache-loader/dist/cjs.js","mtime":1594082385499},{"path":"/Users/user/Desktop/web2.0/WeIns_F/node_modules/vue-loader/lib/index.js","mtime":1594082401315}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}